"""empty message

Revision ID: b4d1f270bcd3
Revises: 10fb9e01cb17
Create Date: 2025-05-02 16:35:05.809460

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'b4d1f270bcd3'
down_revision = '10fb9e01cb17'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('like')
    op.drop_table('profile')
    with op.batch_alter_table('comment', schema=None) as batch_op:
        batch_op.alter_column('comment_text',
               existing_type=sa.TEXT(),
               type_=sa.String(length=300),
               existing_nullable=False)
        batch_op.drop_column('created_at')

    with op.batch_alter_table('follower', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_from_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('user_to_id', sa.Integer(), nullable=False))
        batch_op.drop_constraint('unique_follow', type_='unique')
        batch_op.drop_constraint('follower_followed_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('follower_follower_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'user', ['user_from_id'], ['id'])
        batch_op.create_foreign_key(None, 'user', ['user_to_id'], ['id'])
        batch_op.drop_column('followed_id')
        batch_op.drop_column('follower_id')

    with op.batch_alter_table('media', schema=None) as batch_op:
        batch_op.alter_column('url',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=300),
               existing_nullable=False)
        batch_op.alter_column('type',
               existing_type=postgresql.ENUM('image', 'video', name='media_types'),
               type_=sa.String(length=50),
               existing_nullable=False)

    with op.batch_alter_table('post', schema=None) as batch_op:
        batch_op.add_column(sa.Column('content', sa.String(length=500), nullable=False))
        batch_op.drop_column('created_at')
        batch_op.drop_column('caption')

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('firstname', sa.String(length=120), nullable=False))
        batch_op.add_column(sa.Column('lastname', sa.String(length=120), nullable=False))
        batch_op.alter_column('username',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=80),
               existing_nullable=False)
        batch_op.drop_column('password')
        batch_op.drop_column('is_active')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('password', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
        batch_op.alter_column('username',
               existing_type=sa.String(length=80),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
        batch_op.drop_column('lastname')
        batch_op.drop_column('firstname')

    with op.batch_alter_table('post', schema=None) as batch_op:
        batch_op.add_column(sa.Column('caption', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False))
        batch_op.drop_column('content')

    with op.batch_alter_table('media', schema=None) as batch_op:
        batch_op.alter_column('type',
               existing_type=sa.String(length=50),
               type_=postgresql.ENUM('image', 'video', name='media_types'),
               existing_nullable=False)
        batch_op.alter_column('url',
               existing_type=sa.String(length=300),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)

    with op.batch_alter_table('follower', schema=None) as batch_op:
        batch_op.add_column(sa.Column('follower_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('followed_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('follower_follower_id_fkey', 'user', ['follower_id'], ['id'])
        batch_op.create_foreign_key('follower_followed_id_fkey', 'user', ['followed_id'], ['id'])
        batch_op.create_unique_constraint('unique_follow', ['follower_id', 'followed_id'])
        batch_op.drop_column('user_to_id')
        batch_op.drop_column('user_from_id')

    with op.batch_alter_table('comment', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False))
        batch_op.alter_column('comment_text',
               existing_type=sa.String(length=300),
               type_=sa.TEXT(),
               existing_nullable=False)

    op.create_table('profile',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('bio', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('profile_picture', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('website', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='profile_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='profile_pkey')
    )
    op.create_table('like',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('post_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], name='like_post_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='like_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='like_pkey')
    )
    # ### end Alembic commands ###
